<project name="GenericBatch" basedir="." default="jar">
	<property name="version" value="1.4" />
	<property name="main-class" value="No Main Class Name Here" />
	<!-- ==========END CHANGE VERSION ======= -->
	<property name="lib.dir" value="lib" />
	<property name="src.dir" value="src" />
	<property name="build.dir" value="build" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<!-- ========== classpaths =========== -->
	<path id="classpath" description="Pour le build">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
		<fileset dir="${build.dir}" includes="**/*.class" />
	</path>
	<!-- =================================================================== -->
	<!-- ========== TASKS ================================================== -->
	<!-- =================================================================== -->
	<!-- ========== clean =========== -->
	<target name="clean" description="Nettoyage des dossiers build et dist.">
		<delete dir="${build.dir}" failonerror="no" />
		<delete dir="${dist.dir}" failonerror="no" />
		<delete failonerror="no">
			<fileset dir="${lib.dir}">
				<include name="GenericBatch-" />
			</fileset>
		</delete>
	</target>
	<!-- ========== compile =========== -->
	<target name="compile" depends="">
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" includeantruntime="no" />
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
				<include name="**/*.xsl" />
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>
	<!-- ========== javadoc =========== -->
	<target name='javadoc' description='Generate javadoc.' depends="compile">
		<javadoc use='true' author='true' version='true' overview='${src.dir}/overview.html' access='package' sourcepath='src' packagenames='*.*' destdir='${build.dir}/javadoc' windowtitle='${ant.project.name} ${version}' noqualifier='java.*:javax.*:com.sun.*' linksource='true'>
			<classpath refid='classpath' />
			<link href='http://java.sun.com/javase/6/docs/api/' />
		</javadoc>
	</target>
	<!-- ========== jar =========== -->
	<target name="jar" depends="compile,javadoc">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${ant.project.name}-${version}.jar">
			<fileset dir="${classes.dir}" />
			<fileset dir="${src.dir}" includes="**/*.java" />
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
				<attribute name="Implementation-Version" value="${version}"/>
			</manifest>
		</jar>
	</target>
	<!-- ========== new batch project =========== -->
	<target name="new" depends="jar">
		<input message="Nom du nouveau projet : " addproperty="project" defaultvalue="NouveauProjet" />
		<echo>projet à créer : "${project}"</echo>
		<property name="class" value="org.paris.batch.${project}" />
		<property name="root" value="../${project}" />
		<property name="classp" value="${root}/src/org/paris/batch" />
		<!-- -->
		<copy todir="${root}/lib">
			<fileset dir="${lib.dir}/" />
			<fileset dir="${build.dir}/jar/" />
		</copy>
		<copy todir="${root}/config">
			<fileset dir="templates/config/" />
			<filterset>
				<filter token="CHANGE_ME" value="${project}" />
			</filterset>
		</copy>
		<copy todir="${root}">
			<fileset file="templates/build.xml" />
			<filterset>
				<filter token="CHANGE_ME" value="${project}" />
			</filterset>
		</copy>
		<copy file="templates/skeletons/CHANGE_ME.java" tofile="${classp}/${project}.java">
			<filterset>
				<filter token="CHANGE_ME" value="${project}" />
			</filterset>
		</copy>
		<copy file="templates/skeletons/overview.html" todir="${root}/src">
			<filterset>
				<filter token="CHANGE_ME" value="${project}" />
			</filterset>
		</copy>
		<copy todir="${root}">
			<fileset file="templates/build.xml" />
			<filterset>
				<filter token="CHANGE_ME" value="${project}" />
			</filterset>
		</copy>
		<copy file="templates/classpath" tofile="${root}/.classpath">
			<filterset>
				<filter token="CHANGE_ME" value="${project}" />
			</filterset>
		</copy>
		<copy file="templates/gitignore" tofile="${root}/.gitignore">
			<filterset>
				<filter token="CHANGE_ME" value="${project}" />
			</filterset>
		</copy>
		<copy file="templates/project" tofile="${root}/.project">
			<filterset>
				<filter token="CHANGE_ME" value="${project}" />
			</filterset>
		</copy>
		<echo>projet "${project}" créé. Vous pouvez importer ce projet dans le workspace.</echo>
	</target>
</project>